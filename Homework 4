/**
*Compiled with G++. 
*I had a few bugs in my sort and collaborated with Courtney Calagaz, Brantley Webb, and Drew Gardino to help fix my bugs in my sort.
*/

#include <fstream>
#include <iostream>
#include <cstdlib>
#include <string>
#include <cassert>

using namespace std;
const int MAX_SIZE = 300;


/* Methods */

/**readFile Method. 
*Reads in the file.
*/
int readFile(int inputArray[], ifstream& inStream) {
	if (inStream.fail()) {
		exit(1);
	}
	int index = 0;

	inStream >> inputArray[index];

	while (!inStream.eof()) {
		index++;
		inStream >> inputArray[index];
	}
	return index + 1;
}

/**Sort Method. 
*Sorts the input arrays until they are completely sorted. 
*/
int sort(int inputArray1[], int inputArray1_size, int inputArray2[], int inputArray2_size, int outputArray[]) {
	int a = 0;
	int b = 0;
	int d = 0;

	while (a < inputArray1_size && b < inputArray2_size) {
		if (inputArray1[a] < inputArray2[b]) {
			outputArray[d] = inputArray1[a];
			a++;
			d++;
		}
		else if (inputArray1[a] > inputArray2[b]) {
			outputArray[d] = inputArray2[b];
			b++;
			d++;
		}
		else {
			outputArray[d] = inputArray1[a];
			a++;
			d++;
			outputArray[d] = inputArray2[b];
			b++;
			d++;
		}
}
	if (a == inputArray1_size) {
		while (b < inputArray2_size) {
			outputArray[d] = inputArray2[b];
			b++;
			d++;
		}
	}
	else {
		while (a < inputArray1_size) {
			outputArray[d] = inputArray1[a];
			a++;
			d++;
		}
	}
	return d;
}

/**writefile method. 
*Writes the new file. 
*/
void writefile(int outputArray[], int outputArray_size) {
	string o_fileName = "output.txt";
	ofstream outStream1;
	outStream1.open((char*)o_fileName.c_str());
  
	if (outStream1.fail()) {
		cout << "Output file failed." << endl;
		exit(1);
	}
	for (int i = 0; i < outputArray_size; i++) {
		outStream1 << outputArray[i] << " ";
	}
	outStream1.close();
}
